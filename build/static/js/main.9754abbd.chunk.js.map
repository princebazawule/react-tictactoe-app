{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","renderSquare","i","squares","Game","handleClick","history","state","slice","stepNumber","length","calculateWinner","xIsNext","setState","concat","jumpTo","step","Array","fill","status","this","current","winner","moves","map","move","desc","React","Component","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"kPAKMA,EAAS,SAACC,GACZ,OACI,wBAAQC,UAAU,SAASC,QAASF,EAAME,QAA1C,SACKF,EAAMG,SAKbC,EAAQ,SAACJ,GAEX,IAAMK,EAAe,SAACC,GAClB,OACA,cAACP,EAAD,CACII,MAAOH,EAAMO,QAAQD,GACrBJ,QAAS,kBAAMF,EAAME,QAAQI,OAKrC,OACI,gCACI,sBAAKL,UAAU,YAAf,UACKI,EAAa,GACbA,EAAa,GACbA,EAAa,MAElB,sBAAKJ,UAAU,YAAf,UACKI,EAAa,GACbA,EAAa,GACbA,EAAa,MAElB,sBAAKJ,UAAU,YAAf,UACKI,EAAa,GACbA,EAAa,GACbA,EAAa,UAwCtBG,E,kDACJ,WAAYR,GAAQ,IAAD,8BACf,cAAMA,IAUVS,YAAc,SAACH,GACX,IAAMI,EAAU,EAAKC,MAAMD,QAAQE,MAAM,EAAG,EAAKD,MAAME,WAAa,GAE9DN,EADUG,EAAQA,EAAQI,OAAS,GACjBP,QAAQK,QAC5BG,EAAgBR,IAAYA,EAAQD,KAGxCC,EAAQD,GAAK,EAAKK,MAAMK,QAAU,IAAM,IACxC,EAAKC,SAAS,CACZP,QAASA,EAAQQ,OAAO,CAAC,CACvBX,QAASA,KAEXM,WAAYH,EAAQI,OACpBE,SAAU,EAAKL,MAAMK,YAxBR,EA4BnBG,OAAS,SAACC,GACN,EAAKH,SAAS,CACZJ,WAAYO,EACZJ,QAAUI,EAAO,IAAO,KA7B1B,EAAKT,MAAQ,CACXD,QAAS,CAAC,CACRH,QAASc,MAAM,GAAGC,KAAK,QAEzBT,WAAY,EACZG,SAAS,GAPI,E,0CAmCnB,WAAU,IAgBFO,EAhBC,OACCb,EAAUc,KAAKb,MAAMD,QACrBe,EAAUf,EAAQc,KAAKb,MAAME,YAC7Ba,EAASX,EAAgBU,EAAQlB,SAEjCoB,EAAQjB,EAAQkB,KAAI,SAACR,EAAMS,GAC7B,IAAMC,EAAOD,EACX,eAAiBA,EACjB,mBACF,OACI,6BACI,wBAAQ3B,QAAS,kBAAM,EAAKiB,OAAOU,IAAnC,SAA2CC,KADtCD,MAcjB,OALIN,EADAG,EACS,WAAaA,EAEb,iBAAmBF,KAAKb,MAAMK,QAAU,IAAM,KAIzD,qCACI,gCACA,4CACA,uBACA,0BAGF,sBAAKf,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACG,EAAD,CACIG,QAASkB,EAAQlB,QACjBL,QAAS,SAACI,GAAD,OAAO,EAAKG,YAAYH,QAGvC,sBAAKL,UAAU,YAAf,UACI,8BAAMsB,IACN,6BAAKI,iB,GA7EFI,IAAMC,WAiLzB,SAASjB,EAAgBR,GAWvB,IAVA,IAAM0B,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEA3B,EAAI,EAAGA,EAAE2B,EAAMnB,OAAQR,IAAK,CACnC,kBAAkB2B,EAAM3B,GAAxB,GAAO4B,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAI7B,EAAQ2B,IAAM3B,EAAQ2B,KAAO3B,EAAQ4B,IAAM5B,EAAQ2B,KAAO3B,EAAQ6B,GACpE,OAAO7B,EAAQ2B,GAGnB,OAAO,KAtBTG,IAASC,OACP,cAAC9B,EAAD,IACA+B,SAASC,eAAe,W","file":"static/js/main.9754abbd.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\n\n\nconst Square = (props) => {\n    return (\n        <button className=\"square\" onClick={props.onClick}>\n            {props.value}\n        </button>\n    )\n}\n\nconst Board = (props) => {\n\n    const renderSquare = (i) => {\n        return (\n        <Square\n            value={props.squares[i]}\n            onClick={() => props.onClick(i)}\n        />\n        )\n    }\n\n    return ( \n        <div>\n            <div className=\"board-row\">\n                {renderSquare(0)}\n                {renderSquare(1)}\n                {renderSquare(2)}\n            </div>\n            <div className=\"board-row\">\n                {renderSquare(3)}\n                {renderSquare(4)}\n                {renderSquare(5)}\n            </div>\n            <div className=\"board-row\">\n                {renderSquare(6)}\n                {renderSquare(7)}\n                {renderSquare(8)}\n            </div>\n        </div>\n    )\n} \n//   class Board extends React.Component {\n//     renderSquare(i) {\n//       return (\n//         <Square\n//           value={this.props.squares[i]}\n//           onClick={() => this.props.onClick(i)}\n//         />\n//       )\n//     }\n  \n//     render() {\n//       return (\n//         <div>\n//           <div className=\"board-row\">\n//             {this.renderSquare(0)}\n//             {this.renderSquare(1)}\n//             {this.renderSquare(2)}\n//           </div>\n//           <div className=\"board-row\">\n//             {this.renderSquare(3)}\n//             {this.renderSquare(4)}\n//             {this.renderSquare(5)}\n//           </div>\n//           <div className=\"board-row\">\n//             {this.renderSquare(6)}\n//             {this.renderSquare(7)}\n//             {this.renderSquare(8)}\n//           </div>\n//         </div>\n//       )\n//     }\n//   }\n\n   \n//   export default Game\n  class Game extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n          history: [{\n            squares: Array(9).fill(null),\n          }],\n          stepNumber: 0,\n          xIsNext: true,\n        }\n    }\n\n    handleClick = (i) => {\n        const history = this.state.history.slice(0, this.state.stepNumber + 1)\n        const current = history[history.length - 1]\n        const squares = current.squares.slice()\n        if (calculateWinner(squares) || squares[i]) {\n          return\n        }\n        squares[i] = this.state.xIsNext ? 'X' : 'O'\n        this.setState({\n          history: history.concat([{\n            squares: squares\n          }]),\n          stepNumber: history.length,\n          xIsNext: !this.state.xIsNext,\n        })\n    }\n\n    jumpTo = (step) => {\n        this.setState({\n          stepNumber: step,\n          xIsNext: (step % 2) === 0,\n        })\n    }\n\n    render() {\n        const history = this.state.history\n        const current = history[this.state.stepNumber]\n        const winner = calculateWinner(current.squares)\n\n        const moves = history.map((step, move) => {\n            const desc = move ?\n              'Go to move #' + move :\n              'Go to game start'\n            return (\n                <li key={move}>\n                    <button onClick={() => this.jumpTo(move)}>{desc}</button>\n                </li>\n            )\n        })\n        \n        let status\n        \n        if (winner) {\n            status = 'Winner: ' + winner\n        } else {\n            status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O')\n        }\n\n        return (\n          <>\n              <div>\n              <h1>TicTacToe!</h1>\n              <ul />\n              <br />\n            </div>\n\n            <div className=\"game\">\n              <div className=\"game-board\">\n                <Board\n                    squares={current.squares}\n                    onClick={(i) => this.handleClick(i)}\n                />\n              </div>\n              <div className=\"game-info\">\n                  <div>{status}</div>\n                  <ol>{moves}</ol>\n              </div>\n            </div>\n          </>\n        )\n    }\n  }\n\n\n\n\n\n\n\n\n\n//   class Game extends React.Component {\n//     constructor(props) {\n//         super(props)\n//         this.state = {\n//           history: [{\n//             squares: Array(9).fill(null),\n//           }],\n//           stepNumber: 0,\n//           xIsNext: true,\n//         }\n//     }\n\n//     handleClick(i) {\n//         const history = this.state.history.slice(0, this.state.stepNumber + 1)\n//         const current = history[history.length - 1]\n//         const squares = current.squares.slice()\n//         if (calculateWinner(squares) || squares[i]) {\n//           return\n//         }\n//         squares[i] = this.state.xIsNext ? 'X' : 'O'\n//         this.setState({\n//           history: history.concat([{\n//             squares: squares\n//           }]),\n//           stepNumber: history.length,\n//           xIsNext: !this.state.xIsNext,\n//         })\n//     }\n\n//     jumpTo(step) {\n//         this.setState({\n//           stepNumber: step,\n//           xIsNext: (step % 2) === 0,\n//         })\n//     }\n\n//     render() {\n//         const history = this.state.history\n//         const current = history[this.state.stepNumber]\n//         const winner = calculateWinner(current.squares)\n\n//         const moves = history.map((step, move) => {\n//             const desc = move ?\n//               'Go to move #' + move :\n//               'Go to game start'\n//             return (\n//                 <li key={move}>\n//                     <button onClick={() => this.jumpTo(move)}>{desc}</button>\n//                 </li>\n//             )\n//         })\n        \n//         let status\n        \n//         if (winner) {\n//             status = 'Winner: ' + winner\n//         } else {\n//             status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O')\n//         }\n\n//         return (\n//             <div className=\"game\">\n//             <div className=\"game-board\">\n//             <Board\n//                 squares={current.squares}\n//                 onClick={(i) => this.handleClick(i)}\n//             />\n//             </div>\n//             <div className=\"game-info\">\n//                 <div>{status}</div>\n//                 <ol>{moves}</ol>\n//             </div>\n//             </div>\n//         )\n//     }\n//   }\n  \n  // ========================================\n  \n  ReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n  )\n\n  function calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ]\n    for (let i = 0; i<lines.length; i++) {\n      const [a, b, c] = lines[i]\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a]\n      }\n    }\n    return null\n  }\n  "],"sourceRoot":""}